David Gödicke
Ömer Bayram

Aufgabe1

a)

Dynamische Netwerke können im gegenzug zu Statischen Netzwerke ihre Topologie wärend der Laufzeit ändern.
In einem Statischen Netzwerk werden die verschiedene Knoten je nach Struktur untereinander verbunden
In einem Dynamischen Netwerk wird jeder Knoten z.B mit einem Dynamischen Switch verbunden. Dieser kann die Topologie je nach bedarf anpassen.

b)

1- Sunway TaihuLight: Switch Netwrok zwischen den Super Nodes, Statisches Netzwerk zwichen den 256 Nodes in einem Super Node
2- TH Express-2: Fat Tree Topologie
3- Gemini Interconnect
4- Custom Interconnect, 5-dimensional torus topology
5- Aries Interconnect




Aufgabe2

Das Programm nimmt 3 Arguement an: matrixA, matrixB, matrixC
wo matrixA und matrixB Matrix gefüllte Dateien sind. matrixC ist der Dateiname für das Ergebnis.
Matrix format z.B. (2 x 3):
1 2 3
4 5 6

Wir teilen die Aufgabe in kleinere Matrizen multiplication auf.
Der Knoten mit Rank = 0 wird als Master definiert, alle anderen Knoten sind einfache Worker

Der master teilt die Matrix A (m x p) in kleineren Matrizen A' ( (m / comm_size), p)
Die worker Knoten bekommen jeweils einen Teil A' und die komplete Matrix B (p x m), der master erhält auch einen Teil von A

Jeder Knoten berechnet ein Teilergebnis C' ( (m / comm_size), m) und sendet es and den master Knoten.
Der Master knoten sammelt die Teilergebnisse und speichert das Finale Ergebnis.

Die Funktionen werden im Quellcode mit Pseudo Code dokumentiert. 


Laufzeit:

1500 * 1500 Matrix

4-Knoten: 288 sec
3-Knoten: 352 sec
2-Knoten: 435 sec
1-Knoten: 460 sec


Die Laufzeit sinkt mit der Anzahl an Knoten für eine Matrix der größe 1500*1500. Mit einer Matrix der größe 1000 * 1000 bleibt der Anteil an Kommunicationsaufwand zu hoch um einen Vorteil aus den 4 Knoten zu ziehen.
Um die Anwendung zu optimieren wäre ein verteilter Speicher hilfreich um das mehrfache senden der Kompleten Matrix B zu umgehen.





